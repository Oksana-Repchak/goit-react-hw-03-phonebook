{"version":3,"sources":["components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Section/Section.jsx","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","contactValidation","props","contacts","find","contact","alert","handleSubmit","preventDefault","onSubmit","reset","this","className","s","form","formItem","type","placeholder","onChange","input","button","Component","Filter","container","label","ContactList","onDeleteContact","list","map","id","item","text","onClick","Section","title","children","sectionContainer","App","filter","addContact","shortid","generate","makeFilter","visibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab8f403a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionContainer\":\"Section_sectionContainer__3MVtU\",\"title\":\"Section_title__n3Vfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3l2l6\",\"formItem\":\"ContactForm_formItem__2RDSz\",\"input\":\"ContactForm_input__2b2IK\",\"button\":\"ContactForm_button__36y0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1kENb\",\"item\":\"ContactList_item__1FKYt\",\"text\":\"ContactList_text__2g2kx\",\"button\":\"ContactList_button__qNlHF\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  contactValidation = () => {\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.find(contact => name === contact.name)) {\n      alert(`${name} is already in contacts`);\n      return true;\n    }\n\n    if (name === '' || number === '') {\n      alert('Please enter all data');\n      return true;\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (this.contactValidation()) {\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.formItem}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Сontact name\"\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n\n        <label className={s.formItem}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            placeholder=\"Сontact number\"\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div className={s.container}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          className={s.input}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <p className={s.text}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={s.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className={s.sectionContainer}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  makeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      // Контакти записуються в сховище\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.visibleContacts();\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          {/* <h1 className={title}>Phonebook</h1> */}\n          <ContactForm onSubmit={this.addContact} contacts={contacts} />\n        </Section>\n\n        <Section title=\"Contacts\">\n          {/* <h2 className={title}>Contacts</h2> */}\n          <Filter value={filter} onChange={this.makeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__Wkh5w\",\"label\":\"Filter_label__3Tny-\",\"input\":\"Filter_input__3QCRI\"};"],"sourceRoot":""}